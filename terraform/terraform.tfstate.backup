{
  "version": 4,
  "terraform_version": "0.12.28",
  "serial": 1263,
  "lineage": "87627f9f-78ef-2ab5-5e6c-559984bf249d",
  "outputs": {
    "api_gateway_api_key": {
      "value": "JmdwZiOxhf7LcYZBRFR4X5nc3jeXGgcm9PjiF6Wb",
      "type": "string"
    },
    "api_gateway_region": {
      "value": "us-west-2",
      "type": "string"
    },
    "api_gateway_stage": {
      "value": "prod",
      "type": "string"
    },
    "api_gateway_subdomain": {
      "value": "outs5e1kej",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "203465012143",
            "arn": "arn:aws:iam::203465012143:root",
            "id": "2020-07-25 18:17:37.020164 +0000 UTC",
            "user_id": "203465012143"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "CommonLambdaLogging",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4063422367",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": \"arn:aws:logs:*:*:*\"\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:logs:*:*:*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "CommonUpdateFilesTable",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2165850048",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"dynamodb:UpdateItem\",\n      \"Resource\": \"arn:aws:dynamodb:us-west-2:203465012143:table/Files\"\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "dynamodb:UpdateItem"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:dynamodb:us-west-2:203465012143:table/Files"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "CustomAuthorizer",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1675878659",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"lambda:InvokeFunction\",\n      \"Resource\": \"arn:aws:lambda:us-west-2:203465012143:function:AuthorizationFunction\"\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "lambda:InvokeFunction"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:lambda:us-west-2:203465012143:function:AuthorizationFunction"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "CustomAuthorizerRolePolicy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3555819823",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"apigateway:GET\",\n      \"Resource\": [\n        \"arn:aws:apigateway:us-west-2::/usageplans/*/usage\",\n        \"arn:aws:apigateway:us-west-2::/usageplans\",\n        \"arn:aws:apigateway:us-west-2::/apikeys/*\",\n        \"arn:aws:apigateway:us-west-2::/apikeys\"\n      ]\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "apigateway:GET"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:apigateway:us-west-2::/apikeys",
                  "arn:aws:apigateway:us-west-2::/apikeys/*",
                  "arn:aws:apigateway:us-west-2::/usageplans",
                  "arn:aws:apigateway:us-west-2::/usageplans/*/usage"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "FileCoordinator",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2259389772",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"states:StartExecution\",\n      \"Resource\": \"arn:aws:states:us-west-2:203465012143:stateMachine:MultipartUpload\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"dynamodb:Scan\",\n      \"Resource\": \"arn:aws:dynamodb:us-west-2:203465012143:table/Files\"\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "states:StartExecution"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:states:us-west-2:203465012143:stateMachine:MultipartUpload"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "dynamodb:Scan"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:dynamodb:us-west-2:203465012143:table/Files"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "ListFiles",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2582739958",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:ListBucket\",\n      \"Resource\": \"arn:aws:s3:::lifegames-media-downloader-files/*\"\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "s3:ListBucket"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:s3:::lifegames-media-downloader-files/*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "MultipartUpload",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3707943061",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"dynamodb:UpdateItem\",\n      \"Resource\": \"arn:aws:dynamodb:us-west-2:203465012143:table/Files\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObjectAcl\",\n        \"s3:PutObject\",\n        \"s3:GetObject\"\n      ],\n      \"Resource\": \"arn:aws:s3:::lifegames-media-downloader-files/*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:ListMultipartUploadParts\",\n        \"s3:ListBucketMultipartUploads\",\n        \"s3:ListBucket\",\n        \"s3:AbortMultipartUpload\"\n      ],\n      \"Resource\": \"arn:aws:s3:::lifegames-media-downloader-files\"\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "dynamodb:UpdateItem"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:dynamodb:us-west-2:203465012143:table/Files"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "s3:GetObject",
                  "s3:PutObject",
                  "s3:PutObjectAcl"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:s3:::lifegames-media-downloader-files/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "s3:AbortMultipartUpload",
                  "s3:ListBucket",
                  "s3:ListBucketMultipartUploads",
                  "s3:ListMultipartUploadParts"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:s3:::lifegames-media-downloader-files"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "MultipartUploadStateMachine",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3757859008",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"lambda:InvokeFunction\",\n      \"Resource\": [\n        \"arn:aws:lambda:us-west-2:203465012143:function:UploadPart\",\n        \"arn:aws:lambda:us-west-2:203465012143:function:StartFileUpload\",\n        \"arn:aws:lambda:us-west-2:203465012143:function:CompleteFileUpload\"\n      ]\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "lambda:InvokeFunction"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:lambda:us-west-2:203465012143:function:CompleteFileUpload",
                  "arn:aws:lambda:us-west-2:203465012143:function:StartFileUpload",
                  "arn:aws:lambda:us-west-2:203465012143:function:UploadPart"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "gateway-assume-role-policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3127519745",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": [\n          \"lambda.amazonaws.com\",\n          \"apigateway.amazonaws.com\"\n        ]\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "apigateway.amazonaws.com",
                      "lambda.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "lambda-assume-role-policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "3127519745",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": [\n          \"lambda.amazonaws.com\",\n          \"apigateway.amazonaws.com\"\n        ]\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "apigateway.amazonaws.com",
                      "lambda.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "states-assume-role-policy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2478221018",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"states.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "policy_id": null,
            "source_json": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "states.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "current": null,
            "description": "US West (Oregon)",
            "endpoint": "ec2.us-west-2.amazonaws.com",
            "id": "us-west-2",
            "name": "us-west-2"
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_account",
      "name": "Main",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cloudwatch_role_arn": "arn:aws:iam::203465012143:role/GatewayLogRole",
            "id": "api-gateway-account",
            "throttle_settings": [
              {
                "burst_limit": 5000,
                "rate_limit": 10000
              }
            ]
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.GatewayLogRole"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_api_key",
      "name": "iOSApp",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:apigateway:us-west-2::/apikeys/7k4fgqianj",
            "created_date": "2020-07-11T16:41:42Z",
            "description": "The key for the iOS App",
            "enabled": true,
            "id": "7k4fgqianj",
            "last_updated_date": "2020-07-11T16:41:42Z",
            "name": "iOSAppKey",
            "stage_key": [],
            "tags": {},
            "value": "JmdwZiOxhf7LcYZBRFR4X5nc3jeXGgcm9PjiF6Wb"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_authorizer",
      "name": "CustomAuthorizer",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "authorizer_credentials": "arn:aws:iam::203465012143:role/CustomAuthorizerInvocationRole",
            "authorizer_result_ttl_in_seconds": 0,
            "authorizer_uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:203465012143:function:AuthorizationFunction/invocations",
            "id": "s3rks2",
            "identity_source": "method.request.querystring.ApiKey",
            "identity_validation_expression": "",
            "name": "CustomAuthorizer",
            "provider_arns": [],
            "rest_api_id": "outs5e1kej",
            "type": "REQUEST"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_rest_api.Main",
            "aws_iam_role.CustomAuthorizerInvocationRole",
            "aws_lambda_function.CustomAuthorizer"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_deployment",
      "name": "Main",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "created_date": "2020-07-25T18:17:48Z",
            "description": "",
            "execution_arn": "arn:aws:execute-api:us-west-2:203465012143:outs5e1kej/",
            "id": "2n4j0l",
            "invoke_url": "https://outs5e1kej.execute-api.us-west-2.amazonaws.com/",
            "rest_api_id": "outs5e1kej",
            "stage_description": null,
            "stage_name": null,
            "triggers": {
              "redeployment": "432116b7032c478589f37412e42bbfa47fb205ea"
            },
            "variables": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_integration.ListFilesGet",
            "aws_api_gateway_integration.LogClientEventPost",
            "aws_api_gateway_integration.WebhookFeedlyPost",
            "aws_api_gateway_rest_api.Main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_gateway_response",
      "name": "Default400GatewayResponse",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "aggr-outs5e1kej-DEFAULT_4XX",
            "response_parameters": {},
            "response_templates": {
              "application/json": "{\"error\":{\"code\":\"custom-4XX-generic\",\"message\":$context.error.messageString},\"requestId\":\"$context.requestId\"}"
            },
            "response_type": "DEFAULT_4XX",
            "rest_api_id": "outs5e1kej",
            "status_code": ""
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_rest_api.Main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_gateway_response",
      "name": "Default500GatewayResponse",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "aggr-outs5e1kej-DEFAULT_5XX",
            "response_parameters": {},
            "response_templates": {
              "application/json": "{\"error\":{\"code\":\"custom-5XX-generic\",\"message\":$context.error.messageString},\"requestId\":\"$context.requestId\"}"
            },
            "response_type": "DEFAULT_5XX",
            "rest_api_id": "outs5e1kej",
            "status_code": ""
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_rest_api.Main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "ListFilesGet",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "08vjtn",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "GET",
            "id": "agi-outs5e1kej-08vjtn-GET",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_templates": {},
            "resource_id": "08vjtn",
            "rest_api_id": "outs5e1kej",
            "timeout_milliseconds": 29000,
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:203465012143:function:ListFiles/invocations"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_api_key.iOSApp",
            "aws_api_gateway_authorizer.CustomAuthorizer",
            "aws_api_gateway_method.ListFilesGet",
            "aws_api_gateway_resource.Files",
            "aws_api_gateway_rest_api.Main",
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_policy.CustomAuthorizerRolePolicy",
            "aws_iam_policy.ListFilesRolePolicy",
            "aws_iam_role.CustomAuthorizer",
            "aws_iam_role.CustomAuthorizerInvocationRole",
            "aws_iam_role.ListFilesRole",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicy",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicyLogging",
            "aws_iam_role_policy_attachment.ListFilesPolicy",
            "aws_lambda_function.CustomAuthorizer",
            "aws_lambda_function.ListFiles",
            "aws_lambda_layer_version.NodeModules",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "LogClientEventPost",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "08vjtn",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "POST",
            "id": "agi-outs5e1kej-08vjtn-POST",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_templates": {},
            "resource_id": "08vjtn",
            "rest_api_id": "outs5e1kej",
            "timeout_milliseconds": 29000,
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:203465012143:function:LogClientEvent/invocations"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_authorizer.CustomAuthorizer",
            "aws_api_gateway_method.LogClientEventPost",
            "aws_api_gateway_resource.Files",
            "aws_api_gateway_rest_api.Main",
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_role.LogClientEventRole",
            "aws_iam_role_policy_attachment.LogClientEventPolicyLogging",
            "aws_lambda_function.LogClientEvent",
            "aws_lambda_layer_version.NodeModules"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "WebhookFeedlyPost",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "wkaqwv",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "POST",
            "id": "agi-outs5e1kej-wkaqwv-POST",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_templates": {},
            "resource_id": "wkaqwv",
            "rest_api_id": "outs5e1kej",
            "timeout_milliseconds": 29000,
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:203465012143:function:WebhookFeedly/invocations"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_authorizer.CustomAuthorizer",
            "aws_api_gateway_method.WebhookFeedlyPost",
            "aws_api_gateway_resource.Feedly",
            "aws_api_gateway_rest_api.Main",
            "aws_dynamodb_table.Files",
            "aws_iam_policy.WebhookFeedlyRolePolicy",
            "aws_iam_role.CustomAuthorizerInvocationRole",
            "aws_iam_role.WebhookFeedlyRole",
            "aws_iam_role_policy_attachment.WebhookFeedlyPolicy",
            "aws_lambda_function.CustomAuthorizer",
            "aws_lambda_function.WebhookFeedly",
            "aws_lambda_layer_version.NodeModules"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "ListFilesGet",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": true,
            "authorization": "CUSTOM",
            "authorization_scopes": [],
            "authorizer_id": "s3rks2",
            "http_method": "GET",
            "id": "agm-outs5e1kej-08vjtn-GET",
            "request_models": {},
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_validator_id": "",
            "resource_id": "08vjtn",
            "rest_api_id": "outs5e1kej"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_api_key.iOSApp",
            "aws_api_gateway_authorizer.CustomAuthorizer",
            "aws_api_gateway_resource.Files",
            "aws_api_gateway_rest_api.Main",
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_policy.CustomAuthorizerRolePolicy",
            "aws_iam_role.CustomAuthorizer",
            "aws_iam_role.CustomAuthorizerInvocationRole",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicy",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicyLogging",
            "aws_lambda_function.CustomAuthorizer",
            "aws_lambda_layer_version.NodeModules"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "LogClientEventPost",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": true,
            "authorization": "CUSTOM",
            "authorization_scopes": [],
            "authorizer_id": "s3rks2",
            "http_method": "POST",
            "id": "agm-outs5e1kej-08vjtn-POST",
            "request_models": {},
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_validator_id": "",
            "resource_id": "08vjtn",
            "rest_api_id": "outs5e1kej"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_authorizer.CustomAuthorizer",
            "aws_api_gateway_resource.Files",
            "aws_api_gateway_rest_api.Main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "WebhookFeedlyPost",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "CUSTOM",
            "authorization_scopes": [],
            "authorizer_id": "s3rks2",
            "http_method": "POST",
            "id": "agm-outs5e1kej-wkaqwv-POST",
            "request_models": {},
            "request_parameters": {},
            "request_parameters_in_json": null,
            "request_validator_id": "",
            "resource_id": "wkaqwv",
            "rest_api_id": "outs5e1kej"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_authorizer.CustomAuthorizer",
            "aws_api_gateway_resource.Feedly",
            "aws_api_gateway_rest_api.Main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_method_settings",
      "name": "Production",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "outs5e1kej-prod-*/*",
            "method_path": "*/*",
            "rest_api_id": "outs5e1kej",
            "settings": [
              {
                "cache_data_encrypted": false,
                "cache_ttl_in_seconds": 300,
                "caching_enabled": false,
                "data_trace_enabled": true,
                "logging_level": "INFO",
                "metrics_enabled": true,
                "require_authorization_for_cache_control": true,
                "throttling_burst_limit": 5000,
                "throttling_rate_limit": 10000,
                "unauthorized_cache_control_header_strategy": "SUCCEED_WITH_RESPONSE_HEADER"
              }
            ],
            "stage_name": "prod"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_api_key.iOSApp",
            "aws_api_gateway_authorizer.CustomAuthorizer",
            "aws_api_gateway_deployment.Main",
            "aws_api_gateway_integration.ListFilesGet",
            "aws_api_gateway_method.ListFilesGet",
            "aws_api_gateway_resource.Files",
            "aws_api_gateway_rest_api.Main",
            "aws_api_gateway_stage.Production",
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_policy.CustomAuthorizerRolePolicy",
            "aws_iam_policy.ListFilesRolePolicy",
            "aws_iam_role.CustomAuthorizer",
            "aws_iam_role.CustomAuthorizerInvocationRole",
            "aws_iam_role.ListFilesRole",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicy",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicyLogging",
            "aws_iam_role_policy_attachment.ListFilesPolicy",
            "aws_lambda_function.CustomAuthorizer",
            "aws_lambda_function.ListFiles",
            "aws_lambda_layer_version.NodeModules",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "Feedly",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "wkaqwv",
            "parent_id": "kxvxljox95",
            "path": "/feedly",
            "path_part": "feedly",
            "rest_api_id": "outs5e1kej"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_rest_api.Main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "Files",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "08vjtn",
            "parent_id": "kxvxljox95",
            "path": "/files",
            "path_part": "files",
            "rest_api_id": "outs5e1kej"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_rest_api.Main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "LogEvent",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "lkf2we",
            "parent_id": "kxvxljox95",
            "path": "/logEvent",
            "path_part": "logEvent",
            "rest_api_id": "outs5e1kej"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_rest_api.Main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_rest_api",
      "name": "Main",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_source": "AUTHORIZER",
            "arn": "arn:aws:apigateway:us-west-2::/restapis/outs5e1kej",
            "binary_media_types": [],
            "body": null,
            "created_date": "2020-07-11T16:41:42Z",
            "description": "The API that supports the App",
            "endpoint_configuration": [
              {
                "types": [
                  "EDGE"
                ],
                "vpc_endpoint_ids": []
              }
            ],
            "execution_arn": "arn:aws:execute-api:us-west-2:203465012143:outs5e1kej",
            "id": "outs5e1kej",
            "minimum_compression_size": -1,
            "name": "OfflineMediaDownloader",
            "policy": "",
            "root_resource_id": "kxvxljox95",
            "tags": {}
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_stage",
      "name": "Production",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_log_settings": [],
            "arn": "arn:aws:apigateway:us-west-2::/restapis/outs5e1kej/stages/prod",
            "cache_cluster_enabled": false,
            "cache_cluster_size": "",
            "client_certificate_id": "",
            "deployment_id": "2n4j0l",
            "description": "",
            "documentation_version": "",
            "execution_arn": "arn:aws:execute-api:us-west-2:203465012143:outs5e1kej/prod",
            "id": "ags-outs5e1kej-prod",
            "invoke_url": "https://outs5e1kej.execute-api.us-west-2.amazonaws.com/prod",
            "rest_api_id": "outs5e1kej",
            "stage_name": "prod",
            "tags": {},
            "variables": {},
            "xray_tracing_enabled": false
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_deployment.Main",
            "aws_api_gateway_integration.ListFilesGet",
            "aws_api_gateway_integration.LogClientEventPost",
            "aws_api_gateway_integration.WebhookFeedlyPost",
            "aws_api_gateway_rest_api.Main"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_usage_plan",
      "name": "iOSApp",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_stages": [
              {
                "api_id": "outs5e1kej",
                "stage": "prod"
              }
            ],
            "arn": "arn:aws:apigateway:us-west-2::/usageplans/d8713f",
            "description": "Internal consumption",
            "id": "d8713f",
            "name": "iOSApp",
            "product_code": "",
            "quota_settings": [],
            "tags": {},
            "throttle_settings": []
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_api_key.iOSApp",
            "aws_api_gateway_authorizer.CustomAuthorizer",
            "aws_api_gateway_deployment.Main",
            "aws_api_gateway_integration.ListFilesGet",
            "aws_api_gateway_method.ListFilesGet",
            "aws_api_gateway_resource.Files",
            "aws_api_gateway_rest_api.Main",
            "aws_api_gateway_stage.Production",
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_policy.CustomAuthorizerRolePolicy",
            "aws_iam_policy.ListFilesRolePolicy",
            "aws_iam_role.CustomAuthorizer",
            "aws_iam_role.CustomAuthorizerInvocationRole",
            "aws_iam_role.ListFilesRole",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicy",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicyLogging",
            "aws_iam_role_policy_attachment.ListFilesPolicy",
            "aws_lambda_function.CustomAuthorizer",
            "aws_lambda_function.ListFiles",
            "aws_lambda_layer_version.NodeModules",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_api_gateway_usage_plan_key",
      "name": "iOSApp",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "7k4fgqianj",
            "key_id": "7k4fgqianj",
            "key_type": "API_KEY",
            "name": "iOSAppKey",
            "usage_plan_id": "d8713f",
            "value": ""
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_api_key.iOSApp",
            "aws_api_gateway_authorizer.CustomAuthorizer",
            "aws_api_gateway_deployment.Main",
            "aws_api_gateway_integration.ListFilesGet",
            "aws_api_gateway_method.ListFilesGet",
            "aws_api_gateway_resource.Files",
            "aws_api_gateway_rest_api.Main",
            "aws_api_gateway_stage.Production",
            "aws_api_gateway_usage_plan.iOSApp",
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_policy.CustomAuthorizerRolePolicy",
            "aws_iam_policy.ListFilesRolePolicy",
            "aws_iam_role.CustomAuthorizer",
            "aws_iam_role.CustomAuthorizerInvocationRole",
            "aws_iam_role.ListFilesRole",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicy",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicyLogging",
            "aws_iam_role_policy_attachment.ListFilesPolicy",
            "aws_lambda_function.CustomAuthorizer",
            "aws_lambda_function.ListFiles",
            "aws_lambda_layer_version.NodeModules",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudwatch_event_rule",
      "name": "FileCoordinator",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:events:us-west-2:203465012143:rule/FileCoordinator",
            "description": "",
            "event_pattern": null,
            "id": "FileCoordinator",
            "is_enabled": true,
            "name": "FileCoordinator",
            "name_prefix": null,
            "role_arn": "",
            "schedule_expression": "rate(4 minutes)",
            "tags": {}
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudwatch_event_target",
      "name": "FileCoordinator",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-west-2:203465012143:function:FileCoordinator",
            "batch_target": [],
            "ecs_target": [],
            "id": "FileCoordinator-terraform-20200719012403069800000003",
            "input": "",
            "input_path": "",
            "input_transformer": [],
            "kinesis_target": [],
            "role_arn": "",
            "rule": "FileCoordinator",
            "run_command_targets": [],
            "sqs_target": [],
            "target_id": "terraform-20200719012403069800000003"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_cloudwatch_event_rule.FileCoordinator",
            "aws_dynamodb_table.Files",
            "aws_iam_policy.FileCoordinatorRolePolicy",
            "aws_iam_role.FileCoordinatorRole",
            "aws_iam_role_policy_attachment.FileCoordinatorPolicy",
            "aws_lambda_function.FileCoordinator",
            "aws_lambda_layer_version.NodeModules",
            "aws_sfn_state_machine.MultipartUpload"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "CompleteFileUpload",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:203465012143:log-group:/aws/lambda/CompleteFileUpload:*",
            "id": "/aws/lambda/CompleteFileUpload",
            "kms_key_id": "",
            "name": "/aws/lambda/CompleteFileUpload",
            "name_prefix": null,
            "retention_in_days": 14,
            "tags": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_lambda_function.CompleteFileUpload"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "CustomAuthorizer",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:203465012143:log-group:/aws/lambda/AuthorizationFunction:*",
            "id": "/aws/lambda/AuthorizationFunction",
            "kms_key_id": "",
            "name": "/aws/lambda/AuthorizationFunction",
            "name_prefix": null,
            "retention_in_days": 14,
            "tags": {}
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_api_key.iOSApp",
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_policy.CustomAuthorizerRolePolicy",
            "aws_iam_role.CustomAuthorizer",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicy",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicyLogging",
            "aws_lambda_function.CustomAuthorizer",
            "aws_lambda_layer_version.NodeModules"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "FileCoordinator",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:203465012143:log-group:/aws/lambda/FileCoordinator:*",
            "id": "/aws/lambda/FileCoordinator",
            "kms_key_id": "",
            "name": "/aws/lambda/FileCoordinator",
            "name_prefix": null,
            "retention_in_days": 14,
            "tags": {}
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.Files",
            "aws_iam_policy.FileCoordinatorRolePolicy",
            "aws_iam_role.FileCoordinatorRole",
            "aws_iam_role_policy_attachment.FileCoordinatorPolicy",
            "aws_lambda_function.FileCoordinator",
            "aws_lambda_layer_version.NodeModules",
            "aws_sfn_state_machine.MultipartUpload"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "ListFiles",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:203465012143:log-group:/aws/lambda/ListFiles:*",
            "id": "/aws/lambda/ListFiles",
            "kms_key_id": "",
            "name": "/aws/lambda/ListFiles",
            "name_prefix": null,
            "retention_in_days": 14,
            "tags": {}
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.ListFilesRolePolicy",
            "aws_iam_role.ListFilesRole",
            "aws_iam_role_policy_attachment.ListFilesPolicy",
            "aws_lambda_function.ListFiles",
            "aws_lambda_layer_version.NodeModules",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "LogClientEvent",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:203465012143:log-group:/aws/lambda/LogClientEvent:*",
            "id": "/aws/lambda/LogClientEvent",
            "kms_key_id": "",
            "name": "/aws/lambda/LogClientEvent",
            "name_prefix": null,
            "retention_in_days": 14,
            "tags": {}
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_role.LogClientEventRole",
            "aws_iam_role_policy_attachment.LogClientEventPolicyLogging",
            "aws_lambda_function.LogClientEvent",
            "aws_lambda_layer_version.NodeModules"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "StartFileUpload",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:203465012143:log-group:/aws/lambda/StartFileUpload:*",
            "id": "/aws/lambda/StartFileUpload",
            "kms_key_id": "",
            "name": "/aws/lambda/StartFileUpload",
            "name_prefix": null,
            "retention_in_days": 14,
            "tags": {}
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_lambda_function.StartFileUpload"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "UploadPart",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:203465012143:log-group:/aws/lambda/UploadPart:*",
            "id": "/aws/lambda/UploadPart",
            "kms_key_id": "",
            "name": "/aws/lambda/UploadPart",
            "name_prefix": null,
            "retention_in_days": 14,
            "tags": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_lambda_function.UploadPart"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "WebhookFeedly",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:203465012143:log-group:/aws/lambda/WebhookFeedly:*",
            "id": "/aws/lambda/WebhookFeedly",
            "kms_key_id": "",
            "name": "/aws/lambda/WebhookFeedly",
            "name_prefix": null,
            "retention_in_days": 14,
            "tags": {}
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.Files",
            "aws_iam_policy.WebhookFeedlyRolePolicy",
            "aws_iam_role.WebhookFeedlyRole",
            "aws_iam_role_policy_attachment.WebhookFeedlyPolicy",
            "aws_lambda_function.WebhookFeedly",
            "aws_lambda_layer_version.NodeModules"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "Files",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-west-2:203465012143:table/Files",
            "attribute": [
              {
                "name": "fileId",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "global_secondary_index": [],
            "hash_key": "fileId",
            "id": "Files",
            "local_secondary_index": [],
            "name": "Files",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "replica": [],
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "tags": {},
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "CommonLambdaLogging",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:policy/CommonLambdaLogging",
            "description": "IAM policy for logging from a lambda",
            "id": "arn:aws:iam::203465012143:policy/CommonLambdaLogging",
            "name": "CommonLambdaLogging",
            "name_prefix": null,
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"logs:PutLogEvents\",\n        \"logs:CreateLogStream\",\n        \"logs:CreateLogGroup\"\n      ],\n      \"Resource\": \"arn:aws:logs:*:*:*\"\n    }\n  ]\n}"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "CustomAuthorizerRolePolicy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:policy/CustomAuthorizerRolePolicy",
            "description": "",
            "id": "arn:aws:iam::203465012143:policy/CustomAuthorizerRolePolicy",
            "name": "CustomAuthorizerRolePolicy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"apigateway:GET\",\n      \"Resource\": [\n        \"arn:aws:apigateway:us-west-2::/usageplans/*/usage\",\n        \"arn:aws:apigateway:us-west-2::/usageplans\",\n        \"arn:aws:apigateway:us-west-2::/apikeys/*\",\n        \"arn:aws:apigateway:us-west-2::/apikeys\"\n      ]\n    }\n  ]\n}"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "FileCoordinatorRolePolicy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:policy/FileCoordinatorRolePolicy",
            "description": "",
            "id": "arn:aws:iam::203465012143:policy/FileCoordinatorRolePolicy",
            "name": "FileCoordinatorRolePolicy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"states:StartExecution\",\n      \"Resource\": \"arn:aws:states:us-west-2:203465012143:stateMachine:MultipartUpload\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"dynamodb:Scan\",\n      \"Resource\": \"arn:aws:dynamodb:us-west-2:203465012143:table/Files\"\n    }\n  ]\n}"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.Files",
            "aws_iam_policy.MultipartUploadRolePolicy",
            "aws_iam_role.MultipartUploadRole",
            "aws_iam_role.MultipartUploadStateMachine",
            "aws_iam_role_policy_attachment.MultipartUploadPolicy",
            "aws_lambda_function.CompleteFileUpload",
            "aws_lambda_function.StartFileUpload",
            "aws_lambda_function.UploadPart",
            "aws_lambda_layer_version.NodeModules",
            "aws_s3_bucket.Files",
            "aws_sfn_state_machine.MultipartUpload"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "ListFilesRolePolicy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:policy/ListFilesRolePolicy",
            "description": "",
            "id": "arn:aws:iam::203465012143:policy/ListFilesRolePolicy",
            "name": "ListFilesRolePolicy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:ListBucket\",\n      \"Resource\": \"arn:aws:s3:::lifegames-media-downloader-files/*\"\n    }\n  ]\n}"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "MultipartUploadRolePolicy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:policy/MultipartUploadRolePolicy",
            "description": "",
            "id": "arn:aws:iam::203465012143:policy/MultipartUploadRolePolicy",
            "name": "MultipartUploadRolePolicy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"dynamodb:UpdateItem\",\n      \"Resource\": \"arn:aws:dynamodb:us-west-2:203465012143:table/Files\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObjectAcl\",\n        \"s3:PutObject\",\n        \"s3:GetObject\"\n      ],\n      \"Resource\": \"arn:aws:s3:::lifegames-media-downloader-files/*\"\n    },\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:ListMultipartUploadParts\",\n        \"s3:ListBucketMultipartUploads\",\n        \"s3:ListBucket\",\n        \"s3:AbortMultipartUpload\"\n      ],\n      \"Resource\": \"arn:aws:s3:::lifegames-media-downloader-files\"\n    }\n  ]\n}"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.Files",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "MultipartUploadStateMachineRolePolicy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:policy/MultipartUploadStateMachineRolePolicy",
            "description": "",
            "id": "arn:aws:iam::203465012143:policy/MultipartUploadStateMachineRolePolicy",
            "name": "MultipartUploadStateMachineRolePolicy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"lambda:InvokeFunction\",\n      \"Resource\": [\n        \"arn:aws:lambda:us-west-2:203465012143:function:UploadPart\",\n        \"arn:aws:lambda:us-west-2:203465012143:function:StartFileUpload\",\n        \"arn:aws:lambda:us-west-2:203465012143:function:CompleteFileUpload\"\n      ]\n    }\n  ]\n}"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.Files",
            "aws_iam_policy.MultipartUploadRolePolicy",
            "aws_iam_role.MultipartUploadRole",
            "aws_iam_role_policy_attachment.MultipartUploadPolicy",
            "aws_lambda_function.CompleteFileUpload",
            "aws_lambda_function.StartFileUpload",
            "aws_lambda_function.UploadPart",
            "aws_lambda_layer_version.NodeModules",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "WebhookFeedlyRolePolicy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:policy/WebhookFeedlyRolePolicy",
            "description": "",
            "id": "arn:aws:iam::203465012143:policy/WebhookFeedlyRolePolicy",
            "name": "WebhookFeedlyRolePolicy",
            "name_prefix": null,
            "path": "/",
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"dynamodb:UpdateItem\",\n      \"Resource\": \"arn:aws:dynamodb:us-west-2:203465012143:table/Files\"\n    }\n  ]\n}"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "CustomAuthorizer",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:role/CustomAuthorizer",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"apigateway.amazonaws.com\",\"lambda.amazonaws.com\"]},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-07-11T16:41:42Z",
            "description": "",
            "force_detach_policies": false,
            "id": "CustomAuthorizer",
            "max_session_duration": 3600,
            "name": "CustomAuthorizer",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "unique_id": "AROAS6X3VWOX22XUCFNRD"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "CustomAuthorizerInvocationRole",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:role/CustomAuthorizerInvocationRole",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"lambda.amazonaws.com\",\"apigateway.amazonaws.com\"]},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-07-11T16:41:42Z",
            "description": "",
            "force_detach_policies": false,
            "id": "CustomAuthorizerInvocationRole",
            "max_session_duration": 3600,
            "name": "CustomAuthorizerInvocationRole",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "unique_id": "AROAS6X3VWOXYGH4CQTCD"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "FileCoordinatorRole",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:role/FileCoordinatorRole",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"lambda.amazonaws.com\",\"apigateway.amazonaws.com\"]},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-07-19T01:23:44Z",
            "description": "",
            "force_detach_policies": false,
            "id": "FileCoordinatorRole",
            "max_session_duration": 3600,
            "name": "FileCoordinatorRole",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "unique_id": "AROAS6X3VWOX4GSCDRYPF"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "GatewayLogRole",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:role/GatewayLogRole",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"apigateway.amazonaws.com\",\"lambda.amazonaws.com\"]},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-07-11T16:41:42Z",
            "description": "",
            "force_detach_policies": false,
            "id": "GatewayLogRole",
            "max_session_duration": 3600,
            "name": "GatewayLogRole",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "unique_id": "AROAS6X3VWOXS6C3RIN4P"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "ListFilesRole",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:role/ListFilesRole",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"apigateway.amazonaws.com\",\"lambda.amazonaws.com\"]},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-07-11T16:41:42Z",
            "description": "",
            "force_detach_policies": false,
            "id": "ListFilesRole",
            "max_session_duration": 3600,
            "name": "ListFilesRole",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "unique_id": "AROAS6X3VWOXWHBA3YADB"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "LogClientEventRole",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:role/LogClientEventRole",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"lambda.amazonaws.com\",\"apigateway.amazonaws.com\"]},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-07-25T18:02:08Z",
            "description": "",
            "force_detach_policies": false,
            "id": "LogClientEventRole",
            "max_session_duration": 3600,
            "name": "LogClientEventRole",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "unique_id": "AROAS6X3VWOXZIDD6MH5O"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "MultipartUploadRole",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:role/MultipartUploadRole",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"apigateway.amazonaws.com\",\"lambda.amazonaws.com\"]},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-07-19T00:55:23Z",
            "description": "",
            "force_detach_policies": false,
            "id": "MultipartUploadRole",
            "max_session_duration": 3600,
            "name": "MultipartUploadRole",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "unique_id": "AROAS6X3VWOXUU46EUO6G"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "MultipartUploadStateMachine",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:role/MultipartUploadStateMachine",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"states.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-07-19T00:55:23Z",
            "description": "",
            "force_detach_policies": false,
            "id": "MultipartUploadStateMachine",
            "max_session_duration": 3600,
            "name": "MultipartUploadStateMachine",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "unique_id": "AROAS6X3VWOXWHSTZ5O7J"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "WebhookFeedlyRole",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::203465012143:role/WebhookFeedlyRole",
            "assume_role_policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"lambda.amazonaws.com\",\"apigateway.amazonaws.com\"]},\"Action\":\"sts:AssumeRole\"}]}",
            "create_date": "2020-07-19T00:55:23Z",
            "description": "",
            "force_detach_policies": false,
            "id": "WebhookFeedlyRole",
            "max_session_duration": 3600,
            "name": "WebhookFeedlyRole",
            "name_prefix": null,
            "path": "/",
            "permissions_boundary": null,
            "tags": {},
            "unique_id": "AROAS6X3VWOX5XKFFMUO6"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy",
      "name": "CustomAuthorizerInvocationPolicy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "CustomAuthorizerInvocationRole:CustomAuthorizerInvocationPolicy",
            "name": "CustomAuthorizerInvocationPolicy",
            "name_prefix": null,
            "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"lambda:InvokeFunction\",\n      \"Resource\": \"arn:aws:lambda:us-west-2:203465012143:function:AuthorizationFunction\"\n    }\n  ]\n}",
            "role": "CustomAuthorizerInvocationRole"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_api_key.iOSApp",
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_policy.CustomAuthorizerRolePolicy",
            "aws_iam_role.CustomAuthorizer",
            "aws_iam_role.CustomAuthorizerInvocationRole",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicy",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicyLogging",
            "aws_lambda_function.CustomAuthorizer",
            "aws_lambda_layer_version.NodeModules"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "CustomAuthorizerPolicy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "CustomAuthorizer-20200711164144382400000002",
            "policy_arn": "arn:aws:iam::203465012143:policy/CustomAuthorizerRolePolicy",
            "role": "CustomAuthorizer"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.CustomAuthorizerRolePolicy",
            "aws_iam_role.CustomAuthorizer"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "CustomAuthorizerPolicyLogging",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "CustomAuthorizer-20200711164144391300000003",
            "policy_arn": "arn:aws:iam::203465012143:policy/CommonLambdaLogging",
            "role": "CustomAuthorizer"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_role.CustomAuthorizer"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "FileCoordinatorPolicy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "FileCoordinatorRole-20200719012346116900000001",
            "policy_arn": "arn:aws:iam::203465012143:policy/FileCoordinatorRolePolicy",
            "role": "FileCoordinatorRole"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.FileCoordinatorRolePolicy",
            "aws_iam_role.FileCoordinatorRole"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "FileCoordinatorPolicyLogging",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "FileCoordinatorRole-20200719012943126800000001",
            "policy_arn": "arn:aws:iam::203465012143:policy/CommonLambdaLogging",
            "role": "FileCoordinatorRole"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_role.FileCoordinatorRole"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "ListFilesPolicy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ListFilesRole-20200711164150060500000004",
            "policy_arn": "arn:aws:iam::203465012143:policy/ListFilesRolePolicy",
            "role": "ListFilesRole"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.ListFilesRolePolicy",
            "aws_iam_role.ListFilesRole",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "ListFilesPolicyLogging",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ListFilesRole-20200719165613490400000003",
            "policy_arn": "arn:aws:iam::203465012143:policy/CommonLambdaLogging",
            "role": "ListFilesRole"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_role.ListFilesRole"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "LogClientEventPolicyLogging",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "LogClientEventRole-20200725180209436800000001",
            "policy_arn": "arn:aws:iam::203465012143:policy/CommonLambdaLogging",
            "role": "LogClientEventRole"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_role.LogClientEventRole"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "MultipartUploadPolicy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "MultipartUploadRole-20200719005530088300000001",
            "policy_arn": "arn:aws:iam::203465012143:policy/MultipartUploadRolePolicy",
            "role": "MultipartUploadRole"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.Files",
            "aws_iam_policy.MultipartUploadRolePolicy",
            "aws_iam_role.MultipartUploadRole",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "MultipartUploadPolicyLogging",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "MultipartUploadRole-20200719165613480100000001",
            "policy_arn": "arn:aws:iam::203465012143:policy/CommonLambdaLogging",
            "role": "MultipartUploadRole"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_role.MultipartUploadRole"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "MultipartUploadStateMachinePolicy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "MultipartUploadStateMachine-20200719005607458500000004",
            "policy_arn": "arn:aws:iam::203465012143:policy/MultipartUploadStateMachineRolePolicy",
            "role": "MultipartUploadStateMachine"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.Files",
            "aws_iam_policy.MultipartUploadRolePolicy",
            "aws_iam_policy.MultipartUploadStateMachineRolePolicy",
            "aws_iam_role.MultipartUploadRole",
            "aws_iam_role.MultipartUploadStateMachine",
            "aws_iam_role_policy_attachment.MultipartUploadPolicy",
            "aws_lambda_function.CompleteFileUpload",
            "aws_lambda_function.StartFileUpload",
            "aws_lambda_function.UploadPart",
            "aws_lambda_layer_version.NodeModules",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "MultipartUploadStateMachinePolicyLogging",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "MultipartUploadStateMachine-20200719165613490300000002",
            "policy_arn": "arn:aws:iam::203465012143:policy/CommonLambdaLogging",
            "role": "MultipartUploadStateMachine"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_role.MultipartUploadStateMachine"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "WebhookFeedlyPolicy",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "WebhookFeedlyRole-20200719005530094900000002",
            "policy_arn": "arn:aws:iam::203465012143:policy/WebhookFeedlyRolePolicy",
            "role": "WebhookFeedlyRole"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.Files",
            "aws_iam_policy.WebhookFeedlyRolePolicy",
            "aws_iam_role.WebhookFeedlyRole"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "WebhookFeedlyPolicyLogging",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "WebhookFeedlyRole-20200719165243188100000001",
            "policy_arn": "arn:aws:iam::203465012143:policy/CommonLambdaLogging",
            "role": "WebhookFeedlyRole"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_role.WebhookFeedlyRole"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "aws-managed-policy-attachment",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "GatewayLogRole-20200711164143863300000001",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
            "role": "GatewayLogRole"
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_role.GatewayLogRole"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "CompleteFileUpload",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-west-2:203465012143:function:CompleteFileUpload",
            "dead_letter_config": [],
            "description": "Completes the multipart upload",
            "environment": [
              {
                "variables": {
                  "Bucket": "lifegames-media-downloader-files",
                  "DynamoDBTable": "Files"
                }
              }
            ],
            "file_system_config": [],
            "filename": "./../build/artifacts/dist.zip",
            "function_name": "CompleteFileUpload",
            "handler": "dist/main.completeFileUpload",
            "id": "CompleteFileUpload",
            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:203465012143:function:CompleteFileUpload/invocations",
            "kms_key_arn": "",
            "last_modified": "2020-07-23T03:01:31.838+0000",
            "layers": [
              "arn:aws:lambda:us-west-2:203465012143:layer:NodeModules:3"
            ],
            "memory_size": 128,
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-west-2:203465012143:function:CompleteFileUpload:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::203465012143:role/MultipartUploadRole",
            "runtime": "nodejs12.x",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "source_code_hash": "buOkXj6LphUu2bboph7LwAjwBZZmFv4wpikQ24YlEeA=",
            "source_code_size": 8630178,
            "tags": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_dynamodb_table.Files",
            "aws_iam_role.MultipartUploadRole",
            "aws_iam_role_policy_attachment.MultipartUploadPolicy",
            "aws_lambda_layer_version.NodeModules",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "CustomAuthorizer",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-west-2:203465012143:function:AuthorizationFunction",
            "dead_letter_config": [],
            "description": "The function that handles authorization for the API Gateway.",
            "environment": [
              {
                "variables": {
                  "ApiKeyID": "arn:aws:apigateway:us-west-2::/apikeys/7k4fgqianj"
                }
              }
            ],
            "file_system_config": [],
            "filename": "./../build/artifacts/dist.zip",
            "function_name": "AuthorizationFunction",
            "handler": "dist/main.handleAuthorization",
            "id": "AuthorizationFunction",
            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:203465012143:function:AuthorizationFunction/invocations",
            "kms_key_arn": "",
            "last_modified": "2020-07-23T03:01:31.822+0000",
            "layers": [
              "arn:aws:lambda:us-west-2:203465012143:layer:NodeModules:3"
            ],
            "memory_size": 128,
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-west-2:203465012143:function:AuthorizationFunction:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::203465012143:role/CustomAuthorizer",
            "runtime": "nodejs12.x",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "source_code_hash": "buOkXj6LphUu2bboph7LwAjwBZZmFv4wpikQ24YlEeA=",
            "source_code_size": 8630178,
            "tags": {},
            "timeout": 300,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_api_gateway_api_key.iOSApp",
            "aws_iam_role.CustomAuthorizer",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicy",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicyLogging",
            "aws_lambda_layer_version.NodeModules"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "FileCoordinator",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-west-2:203465012143:function:FileCoordinator",
            "dead_letter_config": [],
            "description": "Checks for files to be downloaded and triggers their execution",
            "environment": [
              {
                "variables": {
                  "DynamoDBTable": "Files",
                  "StateMachineArn": "arn:aws:states:us-west-2:203465012143:stateMachine:MultipartUpload"
                }
              }
            ],
            "file_system_config": [],
            "filename": "./../build/artifacts/dist.zip",
            "function_name": "FileCoordinator",
            "handler": "dist/main.schedulerFileCoordinator",
            "id": "FileCoordinator",
            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:203465012143:function:FileCoordinator/invocations",
            "kms_key_arn": "",
            "last_modified": "2020-07-23T03:01:31.855+0000",
            "layers": [
              "arn:aws:lambda:us-west-2:203465012143:layer:NodeModules:3"
            ],
            "memory_size": 128,
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-west-2:203465012143:function:FileCoordinator:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::203465012143:role/FileCoordinatorRole",
            "runtime": "nodejs12.x",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "source_code_hash": "buOkXj6LphUu2bboph7LwAjwBZZmFv4wpikQ24YlEeA=",
            "source_code_size": 8630178,
            "tags": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_dynamodb_table.Files",
            "aws_iam_role.FileCoordinatorRole",
            "aws_iam_role_policy_attachment.FileCoordinatorPolicy",
            "aws_lambda_layer_version.NodeModules",
            "aws_sfn_state_machine.MultipartUpload"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "ListFiles",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-west-2:203465012143:function:ListFiles",
            "dead_letter_config": [],
            "description": "A lambda function that lists files in S3.",
            "environment": [
              {
                "variables": {
                  "Bucket": "lifegames-media-downloader-files"
                }
              }
            ],
            "file_system_config": [],
            "filename": "./../build/artifacts/dist.zip",
            "function_name": "ListFiles",
            "handler": "dist/main.listFiles",
            "id": "ListFiles",
            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:203465012143:function:ListFiles/invocations",
            "kms_key_arn": "",
            "last_modified": "2020-07-23T03:01:31.857+0000",
            "layers": [
              "arn:aws:lambda:us-west-2:203465012143:layer:NodeModules:3"
            ],
            "memory_size": 128,
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-west-2:203465012143:function:ListFiles:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::203465012143:role/ListFilesRole",
            "runtime": "nodejs12.x",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "source_code_hash": "buOkXj6LphUu2bboph7LwAjwBZZmFv4wpikQ24YlEeA=",
            "source_code_size": 8630178,
            "tags": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_iam_role.ListFilesRole",
            "aws_iam_role_policy_attachment.ListFilesPolicy",
            "aws_lambda_layer_version.NodeModules",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "LogClientEvent",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-west-2:203465012143:function:LogClientEvent",
            "dead_letter_config": [],
            "description": "Records an event from a client environment (e.g. App or Web).",
            "environment": [],
            "file_system_config": [],
            "filename": "./../build/artifacts/dist.zip",
            "function_name": "LogClientEvent",
            "handler": "dist/main.handleClientEvent",
            "id": "LogClientEvent",
            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:203465012143:function:LogClientEvent/invocations",
            "kms_key_arn": "",
            "last_modified": "2020-07-25T18:02:39.217+0000",
            "layers": [
              "arn:aws:lambda:us-west-2:203465012143:layer:NodeModules:3"
            ],
            "memory_size": 128,
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-west-2:203465012143:function:LogClientEvent:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::203465012143:role/LogClientEventRole",
            "runtime": "nodejs12.x",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "source_code_hash": "buOkXj6LphUu2bboph7LwAjwBZZmFv4wpikQ24YlEeA=",
            "source_code_size": 8630178,
            "tags": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_role.LogClientEventRole",
            "aws_iam_role_policy_attachment.LogClientEventPolicyLogging",
            "aws_lambda_layer_version.NodeModules"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "StartFileUpload",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-west-2:203465012143:function:StartFileUpload",
            "dead_letter_config": [],
            "description": "Starts the multipart upload",
            "environment": [
              {
                "variables": {
                  "Bucket": "lifegames-media-downloader-files",
                  "DynamoDBTable": "Files"
                }
              }
            ],
            "file_system_config": [],
            "filename": "./../build/artifacts/dist.zip",
            "function_name": "StartFileUpload",
            "handler": "dist/main.startFileUpload",
            "id": "StartFileUpload",
            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:203465012143:function:StartFileUpload/invocations",
            "kms_key_arn": "",
            "last_modified": "2020-07-23T03:01:31.838+0000",
            "layers": [
              "arn:aws:lambda:us-west-2:203465012143:layer:NodeModules:3"
            ],
            "memory_size": 128,
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-west-2:203465012143:function:StartFileUpload:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::203465012143:role/MultipartUploadRole",
            "runtime": "nodejs12.x",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "source_code_hash": "buOkXj6LphUu2bboph7LwAjwBZZmFv4wpikQ24YlEeA=",
            "source_code_size": 8630178,
            "tags": {},
            "timeout": 900,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_dynamodb_table.Files",
            "aws_iam_role.MultipartUploadRole",
            "aws_iam_role_policy_attachment.MultipartUploadPolicy",
            "aws_lambda_layer_version.NodeModules",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "UploadPart",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-west-2:203465012143:function:UploadPart",
            "dead_letter_config": [],
            "description": "Uploads a part of a multipart upload",
            "environment": [
              {
                "variables": {
                  "Bucket": "lifegames-media-downloader-files",
                  "DynamoDBTable": "Files"
                }
              }
            ],
            "file_system_config": [],
            "filename": "./../build/artifacts/dist.zip",
            "function_name": "UploadPart",
            "handler": "dist/main.uploadFilePart",
            "id": "UploadPart",
            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:203465012143:function:UploadPart/invocations",
            "kms_key_arn": "",
            "last_modified": "2020-07-23T03:01:31.864+0000",
            "layers": [
              "arn:aws:lambda:us-west-2:203465012143:layer:NodeModules:3"
            ],
            "memory_size": 128,
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-west-2:203465012143:function:UploadPart:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::203465012143:role/MultipartUploadRole",
            "runtime": "nodejs12.x",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "source_code_hash": "buOkXj6LphUu2bboph7LwAjwBZZmFv4wpikQ24YlEeA=",
            "source_code_size": 8630178,
            "tags": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_dynamodb_table.Files",
            "aws_iam_role.MultipartUploadRole",
            "aws_iam_role_policy_attachment.MultipartUploadPolicy",
            "aws_lambda_layer_version.NodeModules",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "WebhookFeedly",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-west-2:203465012143:function:WebhookFeedly",
            "dead_letter_config": [],
            "description": "A webhook from Feedly via IFTTT",
            "environment": [
              {
                "variables": {
                  "DynamoDBTable": "Files"
                }
              }
            ],
            "file_system_config": [],
            "filename": "./../build/artifacts/dist.zip",
            "function_name": "WebhookFeedly",
            "handler": "dist/main.handleFeedlyEvent",
            "id": "WebhookFeedly",
            "invoke_arn": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:203465012143:function:WebhookFeedly/invocations",
            "kms_key_arn": "",
            "last_modified": "2020-07-23T03:01:31.866+0000",
            "layers": [
              "arn:aws:lambda:us-west-2:203465012143:layer:NodeModules:3"
            ],
            "memory_size": 128,
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-west-2:203465012143:function:WebhookFeedly:$LATEST",
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::203465012143:role/WebhookFeedlyRole",
            "runtime": "nodejs12.x",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "source_code_hash": "buOkXj6LphUu2bboph7LwAjwBZZmFv4wpikQ24YlEeA=",
            "source_code_size": 8630178,
            "tags": {},
            "timeout": 3,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "aws_dynamodb_table.Files",
            "aws_iam_role.WebhookFeedlyRole",
            "aws_iam_role_policy_attachment.WebhookFeedlyPolicy",
            "aws_lambda_layer_version.NodeModules"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_layer_version",
      "name": "NodeModules",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-west-2:203465012143:layer:NodeModules:3",
            "compatible_runtimes": [
              "nodejs12.x"
            ],
            "created_date": "2020-07-23T03:01:31.091+0000",
            "description": "",
            "filename": "./../build/artifacts/layer-node-modules.zip",
            "id": "arn:aws:lambda:us-west-2:203465012143:layer:NodeModules:3",
            "layer_arn": "arn:aws:lambda:us-west-2:203465012143:layer:NodeModules",
            "layer_name": "NodeModules",
            "license_info": "",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "source_code_hash": "x0CQl2RfrrhgeqeohnmcbCdJjkMEnaRjbvokw8wN75I=",
            "source_code_size": 44461005,
            "version": "3"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "CustomAuthorizer",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "AuthorizationFunction",
            "id": "terraform-20200711164212572400000006",
            "principal": "apigateway.amazonaws.com",
            "qualifier": "",
            "source_account": null,
            "source_arn": null,
            "statement_id": "terraform-20200711164212572400000006",
            "statement_id_prefix": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_api_gateway_api_key.iOSApp",
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_policy.CustomAuthorizerRolePolicy",
            "aws_iam_role.CustomAuthorizer",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicy",
            "aws_iam_role_policy_attachment.CustomAuthorizerPolicyLogging",
            "aws_lambda_function.CustomAuthorizer",
            "aws_lambda_layer_version.NodeModules"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "FileCoordinator",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "FileCoordinator",
            "id": "terraform-20200719012403069000000002",
            "principal": "events.amazonaws.com",
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:events:us-west-2:203465012143:rule/FileCoordinator",
            "statement_id": "terraform-20200719012403069000000002",
            "statement_id_prefix": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_cloudwatch_event_rule.FileCoordinator",
            "aws_dynamodb_table.Files",
            "aws_iam_policy.FileCoordinatorRolePolicy",
            "aws_iam_role.FileCoordinatorRole",
            "aws_iam_role_policy_attachment.FileCoordinatorPolicy",
            "aws_lambda_function.FileCoordinator",
            "aws_lambda_layer_version.NodeModules",
            "aws_sfn_state_machine.MultipartUpload"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "ListFiles",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "ListFiles",
            "id": "terraform-20200711164204925500000005",
            "principal": "apigateway.amazonaws.com",
            "qualifier": "",
            "source_account": null,
            "source_arn": null,
            "statement_id": "terraform-20200711164204925500000005",
            "statement_id_prefix": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.ListFilesRolePolicy",
            "aws_iam_role.ListFilesRole",
            "aws_iam_role_policy_attachment.ListFilesPolicy",
            "aws_lambda_function.ListFiles",
            "aws_lambda_layer_version.NodeModules",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "LogClientEvent",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "LogClientEvent",
            "id": "terraform-20200725180239062200000002",
            "principal": "apigateway.amazonaws.com",
            "qualifier": "",
            "source_account": null,
            "source_arn": null,
            "statement_id": "terraform-20200725180239062200000002",
            "statement_id_prefix": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_iam_policy.CommonLambdaLogging",
            "aws_iam_role.LogClientEventRole",
            "aws_iam_role_policy_attachment.LogClientEventPolicyLogging",
            "aws_lambda_function.LogClientEvent",
            "aws_lambda_layer_version.NodeModules"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "StartFileUpload",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "StartFileUpload",
            "id": "terraform-20200719171418235200000001",
            "principal": "events.amazonaws.com",
            "qualifier": "",
            "source_account": null,
            "source_arn": null,
            "statement_id": "terraform-20200719171418235200000001",
            "statement_id_prefix": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_lambda_function.StartFileUpload"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "WebhookFeedly",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "WebhookFeedly",
            "id": "terraform-20200719005550220100000003",
            "principal": "apigateway.amazonaws.com",
            "qualifier": "",
            "source_account": null,
            "source_arn": null,
            "statement_id": "terraform-20200719005550220100000003",
            "statement_id_prefix": null
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.Files",
            "aws_iam_policy.WebhookFeedlyRolePolicy",
            "aws_iam_role.WebhookFeedlyRole",
            "aws_iam_role_policy_attachment.WebhookFeedlyPolicy",
            "aws_lambda_function.WebhookFeedly",
            "aws_lambda_layer_version.NodeModules"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "Files",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "public-read",
            "arn": "arn:aws:s3:::lifegames-media-downloader-files",
            "bucket": "lifegames-media-downloader-files",
            "bucket_domain_name": "lifegames-media-downloader-files.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "lifegames-media-downloader-files.s3.us-west-2.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "grant": [],
            "hosted_zone_id": "Z3BJ6K6RIION7M",
            "id": "lifegames-media-downloader-files",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "policy": null,
            "region": "us-west-2",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {},
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_sfn_state_machine",
      "name": "MultipartUpload",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "creation_date": "2020-07-19T00:56:05Z",
            "definition": "{\n  \"Comment\": \"A multipart file upload via S3\",\n  \"StartAt\": \"StartUpload\",\n  \"States\": {\n    \"StartUpload\": {\n      \"Type\" : \"Task\",\n      \"Resource\": \"arn:aws:lambda:us-west-2:203465012143:function:StartFileUpload\",\n      \"TimeoutSeconds\": 900,\n      \"HeartbeatSeconds\": 600,\n      \"Next\": \"UploadOrComplete\"\n    },\n    \"UploadPart\": {\n      \"Type\" : \"Task\",\n      \"Resource\": \"arn:aws:lambda:us-west-2:203465012143:function:UploadPart\",\n      \"Next\": \"UploadOrComplete\"\n    },\n    \"CompleteUpload\": {\n      \"Type\" : \"Task\",\n      \"Resource\": \"arn:aws:lambda:us-west-2:203465012143:function:CompleteFileUpload\",\n      \"End\": true\n    },\n    \"UploadOrComplete\": {\n      \"Type\": \"Choice\",\n      \"Choices\": [\n        {\n          \"Variable\": \"$.bytesRemaining\",\n          \"NumericGreaterThan\": 0,\n          \"Next\": \"UploadPart\"\n        },\n        {\n          \"Variable\": \"$.bytesRemaining\",\n          \"NumericEquals\": 0,\n          \"Next\": \"CompleteUpload\"\n        }\n      ]\n    }\n  }\n}\n",
            "id": "arn:aws:states:us-west-2:203465012143:stateMachine:MultipartUpload",
            "name": "MultipartUpload",
            "role_arn": "arn:aws:iam::203465012143:role/MultipartUploadStateMachine",
            "status": "ACTIVE",
            "tags": {}
          },
          "private": "bnVsbA==",
          "dependencies": [
            "aws_dynamodb_table.Files",
            "aws_iam_policy.MultipartUploadRolePolicy",
            "aws_iam_role.MultipartUploadRole",
            "aws_iam_role.MultipartUploadStateMachine",
            "aws_iam_role_policy_attachment.MultipartUploadPolicy",
            "aws_lambda_function.CompleteFileUpload",
            "aws_lambda_function.StartFileUpload",
            "aws_lambda_function.UploadPart",
            "aws_lambda_layer_version.NodeModules",
            "aws_s3_bucket.Files"
          ]
        }
      ]
    }
  ]
}
